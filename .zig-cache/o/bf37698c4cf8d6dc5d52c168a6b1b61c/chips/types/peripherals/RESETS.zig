const microzig = @import("microzig");
const mmio = microzig.mmio;

const types = @import("../../types.zig");

pub const RESETS = extern struct {
    /// Reset control. If a bit is set it means the peripheral is in reset. 0 means the peripheral's reset is deasserted.
    /// offset: 0x00
    RESET: mmio.Mmio(packed struct(u32) {
        ADC: u1,
        BUSCTRL: u1,
        DMA: u1,
        I2C0: u1,
        I2C1: u1,
        IO_BANK0: u1,
        IO_QSPI: u1,
        JTAG: u1,
        PADS_BANK0: u1,
        PADS_QSPI: u1,
        PIO0: u1,
        PIO1: u1,
        PLL_SYS: u1,
        PLL_USB: u1,
        PWM: u1,
        RTC: u1,
        SPI0: u1,
        SPI1: u1,
        SYSCFG: u1,
        SYSINFO: u1,
        TBMAN: u1,
        TIMER: u1,
        UART0: u1,
        UART1: u1,
        USBCTRL: u1,
        padding: u7 = 0,
    }),
    /// Watchdog select. If a bit is set then the watchdog will reset this peripheral when the watchdog fires.
    /// offset: 0x04
    WDSEL: mmio.Mmio(packed struct(u32) {
        ADC: u1,
        BUSCTRL: u1,
        DMA: u1,
        I2C0: u1,
        I2C1: u1,
        IO_BANK0: u1,
        IO_QSPI: u1,
        JTAG: u1,
        PADS_BANK0: u1,
        PADS_QSPI: u1,
        PIO0: u1,
        PIO1: u1,
        PLL_SYS: u1,
        PLL_USB: u1,
        PWM: u1,
        RTC: u1,
        SPI0: u1,
        SPI1: u1,
        SYSCFG: u1,
        SYSINFO: u1,
        TBMAN: u1,
        TIMER: u1,
        UART0: u1,
        UART1: u1,
        USBCTRL: u1,
        padding: u7 = 0,
    }),
    /// Reset done. If a bit is set then a reset done signal has been returned by the peripheral. This indicates that the peripheral's registers are ready to be accessed.
    /// offset: 0x08
    RESET_DONE: mmio.Mmio(packed struct(u32) {
        ADC: u1,
        BUSCTRL: u1,
        DMA: u1,
        I2C0: u1,
        I2C1: u1,
        IO_BANK0: u1,
        IO_QSPI: u1,
        JTAG: u1,
        PADS_BANK0: u1,
        PADS_QSPI: u1,
        PIO0: u1,
        PIO1: u1,
        PLL_SYS: u1,
        PLL_USB: u1,
        PWM: u1,
        RTC: u1,
        SPI0: u1,
        SPI1: u1,
        SYSCFG: u1,
        SYSINFO: u1,
        TBMAN: u1,
        TIMER: u1,
        UART0: u1,
        UART1: u1,
        USBCTRL: u1,
        padding: u7 = 0,
    }),
};
